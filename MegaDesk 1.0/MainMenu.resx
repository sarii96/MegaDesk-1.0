<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>